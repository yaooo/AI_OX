// Compare Efficiency
In general, graph search performs better than tree search in terms of node generated because graph search stores the visited nodes and terminates the current search if it encounters visited nodes. BFS guarantees a solution but it tends to generate many "useless" nodes. DFS could sometimes outperform BFS, but it is sometimes unreliable especially for an infinite graph. In addition, DFS using tree search takes too long to complete, and the iterative deepening tree search provides a good way to compensate it. 

The details of the tour search and the 8-puzzle game are listed below (the numerical representation of "total number of nodes generated" && "max number of node stored on the frontier".)

////////////////////////////////////////////////////////////////////////////////////

This is a demonstration of searches on Romania tour

Performed Breadth First Search Graph Search:
Total number of nodes generated: 947
Maximum number of nodes stored on the frontier: 186

Performed DFS Graph Search:
Total number of nodes generated: 62
Maximum number of nodes stored on the frontier: 19

Performed Breadth First Search Tree Search:
Total number of nodes generated: 75973
Maximum number of nodes stored on the frontier: 44217

Performed Iterative Deepening Tree Search:
Total number of nodes generated: 2651
Maximum number of nodes stored on the frontier: 25

Performed DFS Tree Search:
Time out(30 seconds limit).
Performed DFS Tree Search, failed to find the solution.


This is a demonstration of searches on 8-puzzle


Performed Breadth First Search Graph Search:
Total number of nodes generated: 4359
Maximum number of nodes stored on the frontier: 1592

Performed DFS Graph Search:
Total number of nodes generated: 34266
Maximum number of nodes stored on the frontier: 14480

Performed Breadth First Search Tree Search:
Total number of nodes generated: 2298274
Maximum number of nodes stored on the frontier: 1473871

Performed Iterative Deepening Tree Search:
Total number of nodes generated: 1567125
Maximum number of nodes stored on the frontier: 27

Performed DFS Tree Search:
Time out(30 seconds limit).
Performed DFS Tree Search, failed to find the solution.
0: start

-------------
| 7 | 4 | 2 |
-------------
| 8 | 1 | 3 |
-------------
| 5 |   | 6 |
-------------

1: move LEFT

-------------
| 7 | 4 | 2 |
-------------
| 8 | 1 | 3 |
-------------
|   | 5 | 6 |
-------------

2: move UP

-------------
| 7 | 4 | 2 |
-------------
|   | 1 | 3 |
-------------
| 8 | 5 | 6 |
-------------

3: move UP

-------------
|   | 4 | 2 |
-------------
| 7 | 1 | 3 |
-------------
| 8 | 5 | 6 |
-------------

4: move RIGHT

-------------
| 4 |   | 2 |
-------------
| 7 | 1 | 3 |
-------------
| 8 | 5 | 6 |
-------------

5: move DOWN

-------------
| 4 | 1 | 2 |
-------------
| 7 |   | 3 |
-------------
| 8 | 5 | 6 |
-------------

6: move DOWN

-------------
| 4 | 1 | 2 |
-------------
| 7 | 5 | 3 |
-------------
| 8 |   | 6 |
-------------

7: move LEFT

-------------
| 4 | 1 | 2 |
-------------
| 7 | 5 | 3 |
-------------
|   | 8 | 6 |
-------------

8: move UP

-------------
| 4 | 1 | 2 |
-------------
|   | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

9: move UP

-------------
|   | 1 | 2 |
-------------
| 4 | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

10: move RIGHT

-------------
| 1 |   | 2 |
-------------
| 4 | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

11: move RIGHT

-------------
| 1 | 2 |   |
-------------
| 4 | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

12: move DOWN

-------------
| 1 | 2 | 3 |
-------------
| 4 | 5 |   |
-------------
| 7 | 8 | 6 |
-------------

13: move DOWN

-------------
| 1 | 2 | 3 |
-------------
| 4 | 5 | 6 |
-------------
| 7 | 8 |   |
-------------
